[build-system]
requires = ["scikit-build-core @ git+https://github.com/njzjz/scikit-build-core@entry_points.txt"]
build-backend = "scikit_build_core.build"

[project]
name = "lammps"
version = "2022.6.23.2.0"
dependencies = [
    'importlib_metadata>=1.4; python_version < "3.8"',
]

[project.scripts]
lmp = "lammps.executable:lmp"

[tool.scikit-build]
wheel.install-dir = "lammps"
wheel.py-api = "py2.py3"
cmake.args = [
    "-D LAMMPS_VERSION=stable_23Jun2022_update2",
    "-D PKG_PLUGIN=ON",
    "-D PKG_KSPACE=ON",
    "-D LAMMPS_EXCEPTIONS=ON",
    "-D BUILD_SHARED_LIBS=ON",
]

[tool.cibuildwheel]
build = ["cp311-*"]
skip = ["*-win32", "*-manylinux_i686", "*-musllinux*"]
build-verbosity = "1"
test-command = "lmp -h && python -c 'from lammps import PyLammps'"

[tool.cibuildwheel.linux]
before-all = [
    "yum install -y wget libpng12-devel zlib-devel libjpeg-devel",
]

[tool.cibuildwheel.macos]

before-all = [
'''if [[ "$CIBW_BUILD" == *macosx_arm64* ]]; then
    install_arm=( libpng zlib jpeg-turbo )
    for i in "${install_arm[@]}"; do
        response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded )
        download_path=$(echo $response | xargs -n 1 | tail -1)
        brew reinstall $download_path
    done
fi
'''
]
